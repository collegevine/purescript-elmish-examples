version: 2.1

jobs:
  build:
    working_directory: ~/elmish-examples

    docker:
    # We use this image for our Rails build in production, but it also works
    # well for PureScript build, because it has Node and libsysconfcpus
    # installed. The latter is required to simulate the number of CPUs on
    # CircleCI, and without it the PS compiler detects all 2048 or so cores that
    # the underlying server has, tries to spin up so many threads, and stalls.
    - image: collegevine/rails-build

    parallelism: 1

    steps:
    - checkout: { path: "~/elmish-examples" }

    # TODO: build these in parallel. Couldn't figure out how to do it except to
    # split into separate jobs, which is too much typing
    - build-example: { directory: counter }
    - build-example: { directory: html-hello-world }

commands:
  build-example:
    parameters:
      directory: { type: "string" }
    steps:
      - restore_cache:
          keys:
            - elmish-examples-v1-<< parameters.directory >>-{{ .Branch }}-{{ checksum "<< parameters.directory >>/package-lock.json" }}-{{ checksum "<< parameters.directory >>/packages.dhall" }}-{{ checksum "<< parameters.directory >>/spago.dhall" }}
            - elmish-examples-v1-<< parameters.directory >>-{{ .Branch }}-

      - run: cd ~/elmish-examples/<< parameters.directory >> && npm install && sysconfcpus -n 2 npm run build

      - save_cache:
          key: elmish-examples-v1-<< parameters.directory >>-{{ .Branch }}-{{ checksum "<< parameters.directory >>/package-lock.json" }}-{{ checksum "<< parameters.directory >>/packages.dhall" }}-{{ checksum "<< parameters.directory >>/spago.dhall" }}
          paths:
            - << parameters.directory >>/.spago
            - << parameters.directory >>/node_modules
            - << parameters.directory >>/output
